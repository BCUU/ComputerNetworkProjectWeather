<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwGAADsBgAAAAAAAAAA
        AAAAAAAYAAAAlwICAvEGBgb/BgYG/wYGBv8GBgb/BgYG/wYGBv8GBgb/BgYG/wYGBv8GBgb/BgYG/wYG
        Bv8CAgL/AgIC/wUFBf8FBQX/BQUF/wUFBf8FBQX/BQUF/wUFBf8FBQX/BQUF/wUFBf8FBQX/BQUF/wIC
        AvEAAACXAAAAGAAAAJciIiL8i4uL/6ioqP+oqKj/qKio/6ioqP+oqKj/qKio/6ioqP+oqKj/qKio/6io
        qP+oqKj/qKio/z8/P/81NTX/kJCQ/5CQkP+QkJD/kJCQ/5CQkP+QkJD/kJCQ/5CQkP+QkJD/kJCQ/5CQ
        kP+QkJD/d3d3/x0dHfwAAACXAQEB74uLi//19fX/8/Pz//Pz8//z8/P/9fX1//X19f/09PT/9vb2//T0
        9P/z8/P/8/Pz//Pz8//z8/P/Wlpa/0xMTP/Pz8//z8/P/8/Pz//Pz8//z8/P/9DQ0P/R0dH/0NDQ/8/P
        z//Pz8//z8/P/8/Pz//R0dH/d3d3/wEBAe8GBgb/qamp//Pz8//v7+//7+/v//Dw8P+vr6//r6+v/+Li
        4v+VlZX/0tLS//Hx8f/v7+//7+/v/+/v7/9ZWVn/S0tL/8zMzP/MzMz/zMzM/8zMzP/Ozs7/x8fH/7e3
        t//AwMD/zs7O/8zMzP/MzMz/zc3N/9HR0f+QkJD/BQUF/wYGBv+oqKj/8/Pz/+/v7//v7+//8fHx/4SE
        hP8gICD/TExM/yQkJP/FxcX/8fHx/+/v7//v7+//7+/v/1lZWf9LS0v/zMzM/8zMzP/MzMz/zc3N/6ys
        rP9FRUX/Hh4d/ywtLf+Ghob/y8vL/83Nzf/ExMT/vr6+/5CQkP8FBQX/BgYG/6ioqP/z8/P/8PDw//Hx
        8f/v7+//z8/P/1VVVf8LCwv/i4uL/+Tk5P/x8fH/8fHx//Dw8P/v7+//WVlZ/0tLS//MzMz/zMzM/83N
        zf/ExMT/Pj4//zszH/+mklr/bV86/xoZF/+hoaH/0dHR/4GBgf9KSkr/ioqK/wUFBf8GBgb/qKio//X1
        9f+urq7/hISE/9XV1f9iYmL/cXFx/ykpKf9fX1//oaGh/8rKyv92dnb/2dnZ//Hx8f9ZWVn/S0tL/8zM
        zP/MzMz/zs7O/6ysrf8bGhj/tZ9j///okf/t04P/Mywb/3Bxcv/T09P/cHBw/zExMf+Ghob/BgYG/wYG
        Bv+oqKj/9fX1/6+vr/8fHx//V1dX/3l5ef9bW1v/Ghoa/29vb/9/f3//MTEx/0ZGRv/c3Nz/8fHx/1lZ
        Wf9LS0v/zMzM/8zMzP/Nzc3/tbW1/yAgH/+jj1n//+WP/+PIff8pJBf/f3+A/9PT0/9wcHD/MTEx/4eH
        h/8GBgb/BgYG/6ioqP/09PT/4uLi/05OTv8LCwv/LCws/xsbG/8GBgb/KCgo/yMjI/8KCgr/kpKS//Dw
        8P/w8PD/WVlZ/0tLS//MzMz/zMzM/8zMzP/Kysr/S0tM/1JILP/83ov/oY5Y/x8eHf+vr6//0dHR/3Bw
        cP8xMTH/hoaG/wYGBv8GBgb/qKio//b29v+VlZX/IyMj/5OTk/91dXX/b29v/yUlJf9ubm7/mpqa/2lp
        af8tLS3/0dHR//Hx8f9ZWVn/S0tL/8zMzP/MzMz/zMzM/8/Pz/+RkpL/GxkT/7agZP9GPib/UVFT/8vL
        y//Pz8//hYWF/1BQUP+Kior/BQUF/wYGBv+oqKj/9PT0/9LS0v/ExMT/5ubm/4uLi/9zc3P/IiIi/3t7
        e/+5ubn/6Ojo/7q6uv/l5eX/8PDw/1lZWf9LS0v/zMzM/8zMzP/MzMz/zc3N/8PDw/86Ojr/KiQV/xwa
        Fv+dnp7/z8/P/87Ozv+pqan/jIyM/4+Pj/8FBQX/BgYG/6ioqP/z8/P/8fHx//Hx8f/x8fH/ycnJ/zIy
        Mv8ICAj/aWlp/+fn5//w8PD/8vLy//Dw8P/v7+//WVlZ/0tLS//MzMz/zMzM/8zMzP/MzMz/z8/P/4qK
        iv8FBQX/TU1N/8nJyf/MzMz/zs7O/5WVlf9paWn/jY2N/wUFBf8GBgb/qKio//Pz8//v7+//7+/v//Hx
        8f92dnb/RkZG/5KSkv8tLS3/urq6//Ly8v/v7+//7+/v/+/v7/9ZWVn/S0tL/8zMzP/MzMz/zMzM/8zM
        zP/Nzc3/w8PD/3Nzc/+oqKj/zs7O/8zMzP/MzMz/ysrK/8vLy/+QkJD/BQUF/wYGBv+oqKj/8/Pz/+/v
        7//v7+//7+/v/9nZ2f/c3Nz/8PDw/9HR0f/l5eX/8PDw/+/v7//v7+//7+/v/1lZWf9LS0v/zMzM/8zM
        zP/MzMz/zMzM/8zMzP/MzMz/zs7O/83Nzf/MzMz/zMzM/8zMzP/MzMz/0NDQ/5CQkP8FBQX/BgYG/6io
        qP/z8/P/7+/v/+/v7//v7+//8fHx//Hx8f/v7+//8fHx//Dw8P/v7+//7+/v/+/v7//v7+//WVlZ/0tL
        S//MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/Pz8//kJCQ/wUF
        Bf8CAgL/Pj8//1laW/9YWVr/WFla/1hZWv9YWVr/WFla/1hZWv9YWVr/WFla/1hZWv9YWVr/WFla/1hZ
        Wv8hISH/HRsb/05LSv9OS0r/TktK/05LSv9OS0r/TktK/05LSv9OS0r/TktK/05LSv9OS0r/TktK/09M
        S/83NTT/AgIC/wICAf9COiP/YFMz/15SMv9eUjL/XlIy/15SMv9eUjL/XlIy/15SMv9eUjL/XlIy/15S
        Mv9eUjL/XlIy/yQeEv8GGyP/FUld/xVJXf8VSV3/FUld/xVJXf8VSV3/FUld/xVJXf8VSV3/FUld/xVJ
        Xf8VSV3/FUpf/w8zQv8AAgL/BgUD/7SeY///5I7//+CM///gjP//4Yz//+GM///hjP//4Yz//+GM///h
        jP//4Iz//+CM///gjP//4Iz/YVMy/xRJX/9Axvv/QMb7/0DG+/9Axvv/QMb7/0DG+/9Byf7/QMf8/0DG
        +/9Axvv/QMb7/0DG+/9Byf//LYyx/wIFBv8GBQP/tJ5j///kjv//4Yz//+OO//7fjP/83ov//N6L//ze
        i//83ov//N6L//7hjf//4o3//+CM///gjP9hUzL/FElf/0DG+/9Axvv/QMb7/0HH/f9Axvz/P8L3/y+T
        uv86s+P/QMf8/0DH/P9Ax/z/QMb7/0HJ//8tjLH/AgUG/wYFA/+0nmP//+WP//LWhv+ciFX/Wk4w/1JH
        K/9SRyv/Ukcr/1JHK/9SRyv/aVw4/8Kqav/+4Iz//+GM/2FTMv8USV//QMb7/0DG+/8/w/j/ObHh/0DF
        +v87uOn/DCUv/yuGqv9CzP//OrXm/z287v9Axvz/Qcn//y2Msf8CBQb/BgUD/7SeY///4Yz/d2lB/xsb
        Gv9YWFr/Z2dp/2ZmaP9mZmj/ZmZo/2ZmaP9CQ0T/IB0V/7ulZ///447/YVMy/xRJX/9Axvv/QMf9/zmx
        4f8QMj//IWeC/yBjff8DDA7/Ez5N/yh9nf8PLzz/KoOm/0HJ//9Byf//LYyx/wIFBv8GBQP/tqBk/9zC
        ef8iHhX/l5eX//Hx8f/x8fH/8fHx//Hx8f/x8fH/8vLy/+Xl5f9OT1D/WE0v//3ei/9iUzL/FElf/0DG
        +/9Axvz/P8X6/yFog/8BBAT/Dg4t/yEha/8XFkr/AgMI/xAxPv86tOT/QMj9/0HJ//8tjLH/AgUG/wYF
        A/+3oWT/zrVx/x0bFv+9vb3/9fX1/+/v7//v7+//7+/v/+/v7//v7+//9PT0/29wcf9FPCT/+duJ/2JT
        Mv8USV//QMf8/z/D9/87t+n/IGR9/w4OLf9DQ9f/UFD//0xM9v8hH2r/Di04/zer2f89vvH/Qcn//y2M
        sf8CBQb/BgUD/7WfY//v0oP/ODEf/1FSU//FxcX/6urq/+/v7//v7+//7+/v//Dw8P+2trb/JSUl/4Jy
        Rv//4o3/YlMy/xRJX/9Byf//L5K6/wwlL/8DCwz/ISFq/1BQ//9PT///UFD//zs7u/8EBw3/CRsh/x9f
        ef9ByP7/LYyx/wIFBv8GBQP/tJ5j///lj/+9p2j/My0c/xgYF/+oqKj/8/Pz/+/v7//w8PD/5eXl/zs8
        PP9PRSr/6s6B///ijf9hUzL/FElf/0DH/f86tOT/K4aq/xM9TP8XFkr/TEz0/1BQ//9RUf//Ly6X/wkZ
        Iv8md5b/M5/K/0HJ//8tjLH/AgUG/wYFA/+0nmP//+SO///ijf/myn7/RDwk/1hYWf/r6+v/8/Pz//X1
        9f+2trb/HBsY/7iiZf//5I///+CM/2FTMv8USV//QMb7/0DH/P9CzP//KH2d/wMECf8hIGv/Ozq9/y8u
        l/8JBhz/FD9O/z/D9/9ByP7/Qcn//y2Msf8CBQb/BgUD/7SeY///5I7//+CM///jjv+0n2P/HBkT/2Ji
        ZP+srKz/lJSV/yoqLP9VSy7/89WF///hjP//4Iz/YVMy/xRJX/9Axvv/QMf8/zq15f8PLzv/DzA9/w4t
        Of8EBgz/CRki/xQ+Tf8IGB//LYqv/0HJ/v9Byf//LYyx/wIFBv8GBQP/tJ5j///kjv//4Iz//+CM//3f
        i/+umF//PjYh/yEeFf8nIxf/bF87/+TJfv//4o3//+CM///gjP9hUzL/FElf/0DG+/9Ax/z/Pbzu/yqD
        pv86tOT/N6vZ/wkdJP8neJj/P8P4/y2Kr/81pdH/QMf9/0HJ//8tjLH/AgUG/wYFA/+znmP//+SO///g
        jP//4Iz//+CM///ijf/y1IX/28F4/+TIff/73ov//+GN///gjP//4Iz//+CM/2FTMv8USV//QMb7/0DG
        +/9Axvz/Qcn//0DI/f89vvH/H194/zOfyv9ByP7/Qcj+/0DH/f9Axvv/Qcn//y2Msf8CBQb/AQEA75SD
        Uv//5o///+SO///kjv//5I7//+SO///kj///5pD//+WP///kjv//5I7//+SO///kjv//5I7/YlUy/xVK
        YP9Byf//Qcn//0HJ//9Byf//Qcn//0HJ//9ByP3/Qcn+/0HJ//9Byf//Qcn//0HJ//9Cy///JXOS/wAB
        Ae8AAACXJCAU/JWDUv+0nmP/tJ5j/7SeY/+0nmP/tJ5j/7SeY/+0nmP/tJ5j/7SeY/+0nmP/tJ5j/7Se
        Y/9FOyP/DjND/y2Msf8tjLH/LYyx/y2Msf8tjLH/LYyx/y2Msf8tjLH/LYyx/y2Msf8tjLH/LYyx/yVz
        kv8JHCT8AAAAlwAAABgAAACXAgIB8QYFA/8GBQP/BgUD/wYFA/8GBQP/BgUD/wYFA/8GBQP/BgUD/wYF
        A/8GBQP/BgUD/wICAf8BAgL/AgUG/wIFBv8CBQb/AgUG/wIFBv8CBQb/AgUG/wIFBv8CBQb/AgUG/wIF
        Bv8CBQb/AQIC8QAAAJcAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>